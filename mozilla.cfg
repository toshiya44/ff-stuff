// https://developer.mozilla.org/en-US/Firefox/Enterprise_deployment
lockPref("app.update.auto",								false);
lockPref("app.update.silent",							true);
lockPref("browser.shell.checkDefaultBrowser",			false);
lockPref("extensions.update.autoUpdateDefault",			false);
lockPref("extensions.blocklist.enabled",				true);
lockPref("extensions.blocklist.url",					"https://blocklist.addons.mozilla.org/blocklist/3/%APP_ID%/%APP_VERSION%/");
lockPref("network.IDN_show_punycode",					true);
defaultPref("app.update.enabled",						false);
defaultPref("extensions.update.enabled",				true);
defaultPref("privacy.resistFingerprinting",				true);
defaultPref("privacy.resistFingerprinting.block_mozAddonManager",	true);
lockPref("browser.library.activity-stream.enabled",								false);
lockPref("browser.newtabpage.activity-stream.enabled",							false);
lockPref("browser.newtabpage.activity-stream.telemetry",						false);
lockPref("browser.newtabpage.activity-stream.telemetry.ping.endpoint",			"");
lockPref("browser.newtabpage.activity-stream.feeds.section.topstories",			false);
lockPref("browser.newtabpage.activity-stream.feeds.section.topstories.options",	"");
lockPref("media.eme.enabled",							false);
lockPref("media.autoplay.enabled",						false);
lockPref("media.ffmpeg.enabled",						false);
lockPref("media.block-autoplay-until-in-foreground",	true);
lockPref("media.decoder-doctor.new-issue-endpoint",		"");
lockPref("breakpad.reportURL",								"");
lockPref("security.ssl.errorReporting.url",					"");
lockPref("social.whitelist",						"");
lockPref("social.directories",						"");
lockPref("social.shareDirectory",					"");
lockPref("social.activeProviders",					"");
lockPref("social.enabled", 							false);
lockPref("social.remote-install.enabled",			false);
lockPref("social.toast-notifications.enabled",		false);
lockPref("social.share.activationPanelEnabled",		false);

lockPref("toolkit.telemetry.server",									"");
lockPref("toolkit.telemetry.cachedClientID",							"");
lockPref("toolkit.telemetry.previousBuildID",							"");
lockPref("toolkit.telemetry.enabled",									false);
lockPref("toolkit.telemetry.unified",									false);
lockPref("toolkit.telemetry.bhrPing.enabled",							false);
lockPref("toolkit.telemetry.firstShutdownPing.enabled",					false);
lockPref("toolkit.telemetry.shutdownPingSender.enabled",				false);
lockPref("toolkit.telemetry.shutdownPingSender.enabledFirstSession",	false);
lockPref("toolkit.telemetry.newProfilePing.enabled",					false);
lockPref("toolkit.telemetry.updatePing.enabled",						false);
lockPref("toolkit.telemetry.archive.enabled",							false);
lockPref("toolkit.telemetry.debugSlowSql",								false);
lockPref("toolkit.telemetry.reportingpolicy.firstRun",					false);
lockPref("devtools.onboarding.telemetry.logged",						false);
lockPref("datareporting.healthreport.about.reportUrl",				"");
lockPref("datareporting.healthreport.uploadEnabled",				false);
lockPref("datareporting.healthreport.service.enabled",				false);
lockPref("datareporting.policy.dataSubmissionEnabled",				false);
lockPref("browser.selfsupport.url",								"");
lockPref("browser.selfsupport.enabled",							false);
lockPref("browser.tabs.crashReporting.sendReport",				false);
lockPref("browser.crashReports.unsubmittedCheck.enabled",		false);
lockPref("browser.crashReports.unsubmittedCheck.autoSubmit",	false);

lockPref("extensions.systemAddon.update.url",				"");
lockPref("experiments.manifest.uri",						"");
lockPref("experiments.enabled",								false);
lockPref("experiments.supported",							false);
lockPref("experiments.activeExperiment",					false);
lockPref("loop.enabled",									false);
lockPref("loop.logDomains",									false);
lockPref("dom.flyweb.enabled",								false);
lockPref("browser.pocket.enabled",							false);
lockPref("extensions.pocket.api",							"");
lockPref("extensions.pocket.site",							"");
lockPref("extensions.pocket.enabled",						false);
lockPref("extensions.screenshots.disabled",					true);
lockPref("extensions.screenshots.system-disabled",			true);
lockPref("extensions.shield-recipe-client.enabled", 		false);
lockPref("extensions.shield-recipe-client.api_url", 		"");
lockPref("extensions.shield-recipe-client.user_id", 		"");
lockPref("app.shield.optoutstudies.enabled",				false);
lockPref("extensions.ui.experiment.hidden",					false);
lockPref("extensions.webcompat-reporter.enabled",			false);
lockPref("extensions.webcompat-reporter.newIssueEndpoint",	"");
lockPref("extensions.webcompat-reporter.newIssueEndpoint",	"");
lockPref("extensions.formautofill.experimental",			false);
lockPref("extensions.formautofill.creditCards.available",	false);
lockPref("extensions.formautofill.creditCards.enabled",		false);

// which one? - probably neither...
lockPref("extensions.followonsearch.enabled",			false);
lockPref("extensions.followonsearch.disabled",			true);
lockPref("extensions.followonsearch.cohortSample",		"");
lockPref("e10s.rollout.cohortSample",					"");
lockPref("e10s.rollout.cohortSample.multi",				"");

lockPref("browser.safebrowsing.enabled",										false);
lockPref("browser.safebrowsing.malware.enabled",								false);
lockPref("browser.safebrowsing.phishing.enabled",								false);
lockPref("browser.safebrowsing.blockedURIs.enabled",							false);
lockPref("browser.safebrowsing.downloads.enabled",								false);
lockPref("browser.safebrowsing.downloads.remote.url",							"");
lockPref("browser.safebrowsing.downloads.remote.enabled", 						false);
lockPref("browser.safebrowsing.downloads.remote.block_uncommon",				false);
lockPref("browser.safebrowsing.downloads.remote.block_dangerous",				false);
lockPref("browser.safebrowsing.downloads.remote.block_dangerous_host",			false);
lockPref("browser.safebrowsing.downloads.remote.block_potentially_unwanted",	false);
lockPref("browser.safebrowsing.provider.google.dataSharing.enabled",			false);
lockPref("browser.safebrowsing.provider.google4.dataSharing.enabled",			false);
lockPref("browser.safebrowsing.reportPhishURL",									"");
lockPref("browser.safebrowsing.provider.google.lists",							"");
lockPref("browser.safebrowsing.provider.google.reportURL",						"");
lockPref("browser.safebrowsing.provider.google.updateURL",						"");
lockPref("browser.safebrowsing.provider.google.gethashURL",						"");
lockPref("browser.safebrowsing.provider.google.advisoryURL",					"");
lockPref("browser.safebrowsing.provider.google.dataSharingURL",					"");
lockPref("browser.safebrowsing.provider.google.reportMalwareMistakeURL",		"");
lockPref("browser.safebrowsing.provider.google4.lists",							"");
lockPref("browser.safebrowsing.provider.google4.reportURL",						"");
lockPref("browser.safebrowsing.provider.google4.updateURL",						"");
lockPref("browser.safebrowsing.provider.google4.gethashURL",					"");
lockPref("browser.safebrowsing.provider.google4.advisoryURL",					"");
lockPref("browser.safebrowsing.provider.google4.dataSharingURL",				"");
lockPref("browser.safebrowsing.provider.google4.reportMalwareMistakeURL",		"");
lockPref("browser.safebrowsing.provider.mozilla.lists",							"");
lockPref("browser.safebrowsing.provider.mozilla.reportURL",						"");
lockPref("browser.safebrowsing.provider.mozilla.updateURL",						"");
lockPref("browser.safebrowsing.provider.mozilla.gethashURL",					"");
lockPref("browser.safebrowsing.provider.mozilla.advisoryURL",					"");
lockPref("browser.safebrowsing.provider.mozilla.dataSharingURL",				"");
lockPref("browser.safebrowsing.provider.mozilla.reportMalwareMistakeURL",		"");

lockPref("browser.send_pings",									false);
defaultPref("browser.send_pings.require_same_host",				true);
lockPref("browser.rights.3.shown",								true);
lockPref("browser.startup.homepage_override.mstone",			"ignore");
lockPref("browser.urlbar.trimURLs",								false);
defaultPref("browser.urlbar.userMadeSearchSuggestionsChoice",	false);
defaultPref("browser.urlbar.doubleClickSelectsAll",				false);
defaultPref("browser.urlbar.suggest.searches",					false);
defaultPref("browser.urlbar.suggest.bookmark",					true);
defaultPref("browser.urlbar.suggest.history",					true);
defaultPref("browser.urlbar.suggest.openpage",					true);
defaultPref("browser.urlbar.maxRichResults",					10);
defaultPref("browser.urlbar.autocomplete.enabled",				true);

defaultPref("browser.sessionstore.enabled", 				true);
defaultPref("browser.sessionstore.max_tabs_undo",			20);
defaultPref("browser.sessionstore.max_windows_undo", 		5);
defaultPref("browser.sessionstore.resume_from_crash", 		true);
defaultPref("browser.browser.startup.page", 				3);
defaultPref("network.dnsCacheExpiration",					3600);
defaultPref("network.dnsCacheEntries",						1000);

lockPref("network.prefetch-next",					false);
lockPref("browser.search.reset.enabled",			false);
lockPref("browser.search.reset.status",				"declined");
lockPref("browser.search.geoip.url",				"");
lockPref("browser.search.geoSpecificDefaults",		false);
lockPref("browser.search.geoSpecificDefaults.url",	"");
lockPref("browser.search.update",					false);
lockPref("browser.search.countryCode",				"");
lockPref("browser.search.region",					"");
lockPref("network.dns.disablePrefetch",				true);
lockPref("network.dns.disablePrefetchFromHTTPS",	true);
lockPref("network.dns.blockDotOnion",				true);
lockPref("network.predictor.enabled",				false);
lockPref("network.allow-experiments",				false);
lockPref("network.seer.enabled",					false);
lockPref("browser.casting.enabled",					false);
lockPref("browser.newtab.preload",					false);
lockPref("network.http.speculative-parallel-limit",	0);
lockPref("browser.aboutHomeSnippets.updateUrl",		"");
lockPref("browser.uitour.enabled",										false);
lockPref("browser.onboarding.enabled", 									false);
lockPref("browser.onboarding.newtour",									"");
lockPref("browser.onboarding.updatetour",								"");
lockPref("browser.onboarding.notification.tour-ids-queue",				"");
lockPref("browser.onboarding.notification.max-prompt-count-per-tour",	0);
lockPref("browser.ping-centre.telemetry",								false);
lockPref("browser.ping-centre.log",										false);
lockPref("browser.ping-centre.staging.endpoint",						"");
lockPref("browser.ping-centre.production.endpoint",						"");
lockPref("browser.tabs.remote.warmup.enabled",							false);

lockPref("toolkit.crashreporter.enabled", false);
Components.classes["@mozilla.org/toolkit/crash-reporter;1"].getService(Components.interfaces.nsICrashReporter).submitReports = false;
